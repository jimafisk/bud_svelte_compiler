/* templates/components/grid.js generated by Svelte v3.47.0 */
import {
	add_attribute,
	create_ssr_component,
	each,
	escape
} from "svelte/internal";

import { sortByDate } from '../scripts/sort_by_date.js';

const css = {
	code: ".grid.js-mjwerd.js-mjwerd{display:grid;grid-template-columns:repeat(3, 1fr);grid-column-gap:10px;grid-row-gap:10px}.grid.js-mjwerd .grid-item.js-mjwerd{display:flex;flex-grow:1;height:180px;padding:10px;align-items:center;justify-content:center;background:var(--primary);font-weight:bold;border-radius:5px;color:white;text-align:center}a.js-mjwerd.js-mjwerd::before{content:none}",
	map: "{\"version\":3,\"file\":\"grid.js\",\"sources\":[\"grid.js\"],\"sourcesContent\":[\"<script>\\n  import { sortByDate } from '../scripts/sort_by_date.js';\\n  export let items, postRangeLow, postRangeHigh;\\n</script>\\n\\n<div class=\\\"grid\\\">\\n  {#each sortByDate(items) as item, i}\\n    {#if i >= postRangeLow && i < postRangeHigh}\\n      <a class=\\\"grid-item\\\" href=\\\"{item.path}\\\">{item.fields.title}</a>\\n    {/if}\\n  {/each}\\n</div>\\n\\n<style>\\n  .grid {\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    grid-column-gap: 10px;\\n    grid-row-gap: 10px;\\n  }\\n  .grid .grid-item {\\n    display: flex;\\n    flex-grow: 1;\\n    height: 180px;\\n    padding: 10px;\\n    align-items: center;\\n    justify-content: center;\\n    background: var(--primary);\\n    font-weight: bold;\\n    border-radius: 5px;\\n    color: white;\\n    text-align: center;\\n  }\\n  a::before {\\n    content: none;\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AAcE,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,eAAe,CAAE,IAAI,CACrB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,mBAAK,CAAC,UAAU,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,CAAC,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,IAAI,SAAS,CAAC,CAC1B,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,6BAAC,QAAQ,AAAC,CAAC,AACT,OAAO,CAAE,IAAI,AACf,CAAC\"}"
};

const Grid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { items, postRangeLow, postRangeHigh } = $$props;
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.postRangeLow === void 0 && $$bindings.postRangeLow && postRangeLow !== void 0) $$bindings.postRangeLow(postRangeLow);
	if ($$props.postRangeHigh === void 0 && $$bindings.postRangeHigh && postRangeHigh !== void 0) $$bindings.postRangeHigh(postRangeHigh);
	$$result.css.add(css);

	return `<div class="${"grid svelte-mjwerd"}">${each(sortByDate(items), (item, i) => {
		return `${i >= postRangeLow && i < postRangeHigh
		? `<a class="${"grid-item svelte-mjwerd"}"${add_attribute("href", item.path, 0)}>${escape(item.fields.title)}</a>`
		: ``}`;
	})}
</div>`;
});

export default Grid;