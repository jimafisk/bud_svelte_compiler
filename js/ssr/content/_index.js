/* templates/content/_index.js generated by Svelte v3.47.0 */
import {
	create_ssr_component,
	each,
	escape,
	validate_component
} from "svelte/internal";

import Grid from '../components/grid.js';
import Uses from "../components/source.js";
import Pager from "../components/pager.js";

const Index = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let currentPage;
	let postRangeHigh;
	let postRangeLow;
	let { title, intro, blog, source, content, allContent } = $$props;
	let postsPerPage = 3;
	let allPosts = allContent.filter(content => content.type == "blog");
	let totalPosts = allPosts.length;
	let totalPages = Math.ceil(totalPosts / postsPerPage);
	if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
	if ($$props.intro === void 0 && $$bindings.intro && intro !== void 0) $$bindings.intro(intro);
	if ($$props.blog === void 0 && $$bindings.blog && blog !== void 0) $$bindings.blog(blog);
	if ($$props.source === void 0 && $$bindings.source && source !== void 0) $$bindings.source(source);
	if ($$props.content === void 0 && $$bindings.content && content !== void 0) $$bindings.content(content);
	if ($$props.allContent === void 0 && $$bindings.allContent && allContent !== void 0) $$bindings.allContent(allContent);
	currentPage = content.pager ? content.pager : 1;
	postRangeHigh = currentPage * postsPerPage;
	postRangeLow = postRangeHigh - postsPerPage;

	return `<h1>${escape(title)}</h1>

<section id="${"intro"}">${each(intro, paragraph => {
		return `<p><!-- HTML_TAG_START -->${paragraph}<!-- HTML_TAG_END --></p>`;
	})}</section>

${blog
	? `<div><h3>Recent blog posts:</h3>
		${validate_component(Grid, "Grid").$$render(
			$$result,
			{
				items: allPosts,
				postRangeLow,
				postRangeHigh
			},
			{},
			{}
		)}
		<br></div>
	${validate_component(Pager, "Pager").$$render($$result, { currentPage, totalPages }, {}, {})}`
	: ``}

${source
	? `${validate_component(Uses, "Uses").$$render($$result, { content, source }, {}, {})}`
	: ``}`;
});

export default Index;