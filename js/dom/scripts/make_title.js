/* templates/scripts/make_title.svelte generated by Svelte v3.47.0 */
import {
	SvelteComponentDev,
	dispatch_dev,
	init,
	noop,
	safe_not_equal,
	validate_slots
} from "svelte/internal";

const file = "templates/scripts/make_title.svelte";

function create_fragment(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		i: noop,
		o: noop,
		d: noop
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const makeTitle = filename => {
	if (filename == 'index.json') {
		return 'Home';
	} else if (filename) {
		// Remove file extension.
		filename = filename.split('.').slice(0, -1).join('.');

		// Convert underscores and hyphens to spaces.
		filename = filename.replace(/_|-/g, ' ');

		// Capitalize first letter of each word.
		filename = filename.split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');
	}

	return filename;
};

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Make_title', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Make_title> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ makeTitle });
	return [];
}

class Make_title extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Make_title",
			options,
			id: create_fragment.name
		});
	}
}

export default Make_title;
export { makeTitle };