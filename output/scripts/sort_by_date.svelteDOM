/* templates/scripts/sort_by_date.svelte generated by Svelte v3.47.0 */
import {
	SvelteComponentDev,
	dispatch_dev,
	init,
	noop,
	safe_not_equal,
	validate_slots
} from "svelte/internal";

const file = "templates/scripts/sort_by_date.svelte";

function create_fragment(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		i: noop,
		o: noop,
		d: noop
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const sortByDate = (items, order) => {
	items.sort((a, b) => {
		// Must have field named "date" in content source to work.
		let dateA = new Date(a?.fields?.date);

		let dateB = new Date(b?.fields?.date);
		return order == "oldest" ? dateA - dateB : dateB - dateA;
	});

	return items;
};

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Sort_by_date', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Sort_by_date> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ sortByDate });
	return [];
}

class Sort_by_date extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Sort_by_date",
			options,
			id: create_fragment.name
		});
	}
}

export default Sort_by_date;
export { sortByDate };