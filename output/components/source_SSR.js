/* templates/components/source.svelte generated by Svelte v3.47.0 */
import { add_attribute, create_ssr_component, escape } from "svelte/internal";

const css = {
	code: "div.svelte-h385oz{display:flex;align-items:center}pre.svelte-h385oz{display:flex;padding-left:5px}code.svelte-h385oz{background-color:var(--base);padding:5px 10px}code.selected.svelte-h385oz{background-color:var(--accent)}button.svelte-h385oz{border:1px solid rgba(0,0,0,.1);background:white;padding:4px;border-top-right-radius:5px;border-bottom-right-radius:5px;cursor:pointer}",
	map: "{\"version\":3,\"file\":\"source.svelte\",\"sources\":[\"source.svelte\"],\"sourcesContent\":[\"<script>\\n  export let content, source;\\n\\n  let templateEl;\\n  let contentEl;\\n  let copied;\\n  const copy = async (el) => {\\n    if (!navigator.clipboard) {\\n      return\\n    } \\n    try {\\n      await navigator.clipboard.writeText(el.innerHTML);\\n      copied = el;\\n      setTimeout(() => copied = null, 500);\\n    } catch (err) {\\n      console.error('Failed to copy!', err)\\n    }\\n  }\\n</script>\\n\\n{#if source.layout}\\n  <div>\\n    <span>Layout:</span>\\n    <pre>\\n      <code bind:this={templateEl} class:selected=\\\"{copied === templateEl}\\\">layouts/content/{content.type}.svelte</code>\\n      <button on:click={() => copy(templateEl)}>{copied === templateEl ? 'copied' : 'copy'}</button>\\n    </pre>\\n  </div>  \\n{/if}\\n\\n{#if source.content}\\n  <div>\\n    <span>Content:</span>\\n    <pre>\\n      <code bind:this={contentEl} class:selected=\\\"{copied === contentEl}\\\">content/{content.type === 'index' ? '' : content.type + '/'}{content.filename}</code>\\n      <button on:click={() => copy(contentEl)}>{copied === contentEl ? 'copied' : 'copy'}</button>\\n    </pre>\\n  </div>\\n{/if}\\n\\n<style>\\n  div {\\n    display: flex;\\n    align-items: center;\\n  }\\n  pre {\\n    display: flex;\\n    padding-left: 5px;\\n  }\\n  code {\\n      background-color: var(--base);\\n      padding: 5px 10px;\\n  }\\n  code.selected {\\n      background-color: var(--accent);\\n  }\\n  button {\\n    border: 1px solid rgba(0,0,0,.1);\\n    background: white;\\n    padding: 4px;\\n    border-top-right-radius: 5px;\\n    border-bottom-right-radius: 5px;\\n    cursor: pointer;\\n  }\\n</style>\"],\"names\":[],\"mappings\":\"AAyCE,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,IAAI,cAAC,CAAC,AACF,gBAAgB,CAAE,IAAI,MAAM,CAAC,CAC7B,OAAO,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC,AACD,IAAI,SAAS,cAAC,CAAC,AACX,gBAAgB,CAAE,IAAI,QAAQ,CAAC,AACnC,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAChC,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,GAAG,CACZ,uBAAuB,CAAE,GAAG,CAC5B,0BAA0B,CAAE,GAAG,CAC/B,MAAM,CAAE,OAAO,AACjB,CAAC\"}"
};

const Source = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { content, source } = $$props;
	let templateEl;
	let contentEl;
	let copied;

	const copy = async el => {
		if (!navigator.clipboard) {
			return;
		}

		try {
			await navigator.clipboard.writeText(el.innerHTML);
			copied = el;
			setTimeout(() => copied = null, 500);
		} catch(err) {
			console.error('Failed to copy!', err);
		}
	};

	if ($$props.content === void 0 && $$bindings.content && content !== void 0) $$bindings.content(content);
	if ($$props.source === void 0 && $$bindings.source && source !== void 0) $$bindings.source(source);
	$$result.css.add(css);

	return `${source.layout
	? `<div class="${"svelte-h385oz"}"><span>Layout:</span>
    <pre class="${"svelte-h385oz"}">
      <code class="${["svelte-h385oz", copied === templateEl ? "selected" : ""].join(' ').trim()}"${add_attribute("this", templateEl, 0)}>layouts/content/${escape(content.type)}.svelte</code>
      <button class="${"svelte-h385oz"}">${escape(copied === templateEl ? 'copied' : 'copy')}</button>
    </pre></div>`
	: ``}

${source.content
	? `<div class="${"svelte-h385oz"}"><span>Content:</span>
    <pre class="${"svelte-h385oz"}">
      <code class="${["svelte-h385oz", copied === contentEl ? "selected" : ""].join(' ').trim()}"${add_attribute("this", contentEl, 0)}>content/${escape(content.type === 'index' ? '' : content.type + '/')}${escape(content.filename)}</code>
      <button class="${"svelte-h385oz"}">${escape(copied === contentEl ? 'copied' : 'copy')}</button>
    </pre></div>`
	: ``}`;
});

export default Source;